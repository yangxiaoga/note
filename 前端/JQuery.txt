		
		JQuery



1、jQuery是什么
	jQuery是一个优秀的JavaScript函数库，而非JavaScript，它是轻量级的库

2、兼容性
	兼容css3.以及各种浏览器
	兼容低端浏览器
	兼容从IE9开始以及高端浏览器
	
3、方便处理html events 实现动画效果，为网站提供Ajax交互
	
4、核心理念
	 write less ，do more

5、jQuery功能
          html元素选取
          html元素操作
          css操作
          html事件函数
          JavaScript特效
          html dom遍历和修改
          ajax
          Utilities

6、jQuery语法
    $(selector).action()          
     $(document).ready(//文档就绪事件
         function(){
              //somecoding 
         }
     )
防止文档在完全加载（就绪）之前运行 jQuery 代码。

7、jQuery选择器
      	id选择 $('#someId')
       	class选择 $('.someClass')
        class为first的p标签 $ ('p.first')    
        第一个p元素 $('p:first')      
        ul下的第一个li元素 $("#ul li:first")   
       	选取type为button的元素 $(':button')                

8、方法

     	（1）单击   		click                               
     	（2）双击    		dblclick
      	（3）鼠标指针穿过元素    mouseenter   
      	（4）鼠标指针离开元素    mouseleave      
      	（5）鼠标按下     	 mousedown
      	（6）松开鼠标      	 mouseup
   	（7）鼠标悬停    	 hover()
	（8）focus() 	当元素获得焦点时，发生 focus 事件。
			当通过鼠标点击选中元素或通过 tab 键定位到元素时，该元素就会获得焦点。
	（9）blur() 当元素失去焦点时，发生 blur 事件。
		    blur() 方法触发 blur 事件，或规定当发生 blur 事件时运行的函数：
	（10）$(selector).hide(speed,callback);
		$(selector).show(speed,callback);
		可选的 speed 参数规定隐藏/显示的速度，可以取以下值："slow"、"fast" 或毫秒。
		可选的 callback 参数是隐藏或显示完成后所执行的函数名称。

9、jQuery选择器

	1、基础选择器
	2、属性选择器
	3、基础过滤
	4、子元素过滤
	5、内容过滤
	6、表单
	7、层级
	8、jQuery扩展
	9、可见性过滤

	基础选择器

    9.1、所有

      	All Selector("*") 获取的是全部的元素，有些浏览器比较缓慢
      	$("*") 或者   $("div *") ：“div下的所有内容
	如：
		<div id="mydiv">this is a div
			<p></p>
			<label></label>
			<div></div>
		</div>
	$(document).ready(
   		function(){
	   		$('#mydiv').click(
	      			function(){
		  			$('#mydiv *').html("this is a add content");
		  		}
	   		)
  		 }
	)
	点击之后为mydiv中的所有标签添加内容


    9.2、Class Selector(".someclass") 选择给定样式类名的所有元素
     	$(".class")

    9.3、元素选择器 $("element")
 	如div p span label等

    9.4、id选择器
	$("#id") 选择具有给定id属性的单个元素

    9.5、混合选择器
     	选择指定的元素
     	$("selecotr1,selector2,")
	如$("#mydiv,p,div,.tt")

	9.6子元素过滤选择器

		1、父级元素的第一个子元素选择
  			语法：jQuery(":first-child")

		2、父级元素的最后一个子元素
			jQuery(":last-child")
		3、选择所有相同的元素名称的第一个兄弟元素




10、属性选择器

		<div id="mydiv">this is a div
		    <a href="#" hreflang="en" id="tt">英文</a>
		    <a href="#" hreflang="zh">中文</a>	
		</div>      
$(document).ready(
   function(){
        $("#tt").click(
	      function(){
                        //选择属性hreflang值为en的元素 即<a href="#" hreflang="en" id="tt">英文</a>
			$("[hreflang=en]").html("this is a multipart area");
		  }		
		);
   }
)
10.1、属性选择器
     	Attibute Contains Prefix Selector[name="value"]
	描述：选择指定属性值等于给定字符串或以该字符串为前缀（该字符串后跟一个连字符"_"）的元素
	语法  $("[attribute='value']")

	注意引号是可选的，可以是一个不带引号的一个单词或带一个引号的字符串

10.2、Attribute Contains Selector [name*="value"]
     	描述：选择指定属性具有包含一个给定的子字符串的元素
	语法 $("[attribute*='value']")

10.3、Attribute Contains Word Selector[name~="value"]
	描述：选择指定属性用空格分隔的值中包含一个给定值得元素
	语法 $("[attribute~='value']")

10.4、Attribute Ends With Selector [name$="value"]
	描述：选择指定属性是给定值得元素
	语法$("[attribute='value']")
10.5、Attribute Not Equal Selector[name!="value"]
	描述：选择不存在指定属性，或者指定属性不等于给定值的元素
	语法:  $("[attribute!='value']")

10.6、Attribute Ends With Selector [name$="value"]

	描述：选择指定属性是以给定值结尾的元素，这个比较是区分大小写的
	语法： $("[attribute$='value']")

10.7、Attribute Starts With Selector[name^="value"]
	描述：选择指定属性是以给定字符串开始的元素
	语法：$("[attribute^='value']")
10.8、Has Attribute Selector[name]
	描述：选择所有具有指定属性的元素，该属性可以是任何值
	语法：$("[attribute]")

10.9、Multiple Attribute Selector[name="value"]["names="value2""]

	描述：选择所有指定的属性筛选器的元素
	语法$("[attributeFilter1][attributeFilters]")

举例：
	<body>
            <input name="man-news"id="man-news"/>
			<input name="milkman"/>
			<input name="letterman2" id="new-letterman"/>
			<input name="newmilk"/>
	</body>

$(document).ready(

   function(){
            //拥有id属性，并且name以news结尾
			$("input[id][name$='news']").val("this is a news area");

   }
)


11、基础过滤

11.1、animated Selector
	描述：选择所有正在执行动画效果的元素
	语法：$(":animated")


11.2、eq() Selector

	<body>
       <button id="run">run</button>
       <div></div>
	   <div id="mover"></div>
	   <div></div>
	</body>
11.3 js脚本
$(
   function(){
   	$("#run").click(function(){
		//点击按钮为当前动画元素添加colored样式
		$("div:animated").toggleClass("colored");
	});
	function animatedIt(){
		//用上下滑动动画隐藏或者显示元素
		//为id为nover的元素添加该动画
		$("#mover").slideToggle("slow",animatedIt);
	}
	animatedIt();
   }
)

css样式

div{
	width:300px;
	height:200px;
	float:left;
	border:1px solid #aaaaaa;
	margin:0 5px;
	background-color:#0aff33;
}
.colored{
	background-color:blue;
}




12、 jQuery捕获

	jQuery操作DOM
	三个DOM操作的jQuery方法
     	text（）设置或返回所选元素的文本内容
     	html（）设置或返回所选元素内容（包括html标记）
     	val（）设置或返回表单字段的值
     	attr（） 获取属性
	获取属性的值，如   $("a").attr("href") 获取a标签属性href的值
   

13、jQuery设置

设置内容text（） html（） 以及val（），显示字体的标签可以设置text  ，像input这种可以输入的可以设置val

text()  html() val()的回调函数
	回调函数又两个参数：被选元素列表中当前元素的下标以及原始的值，然后以函数新值返回您希望使用的字符串

如p标签
function(){
        	$("#prea").text(function(i,originalText){
     	 	return "旧文本"+originalText+"新文本"+"p标签区域";
     	}	
     );	
     
}
执行函数后 文本会显示 return的部分

attr() 设置属性
回调函数
$("button").click(function(){
  $("#runoob").attr("href", function(i,origValue){
    return origValue + "/jquery"; 
  });
});








14、遍历

14.1、parent（）
	返回被选元素的直接父元素
$(document).ready(
   function(){
            $("#span").parent();
   }
);

打印输出的话,是一个Object object

14.12、parents（）方法按照所选元素的所有祖先元素，一路向上指导文档的根元素<html> 可以在其中加参数找到指定的parant

14.13、后代
	children（）
	返回被选元素的所有直接子元素
	该方法只会向下一级对DOM树进行遍历
	如$("div").children();
14.14、find（）
	返回被选元素的后代元素，一路向下直到最后一个后代
	$("div").find("span")   返回属于<div>的所有span元素







15、淡入淡出

15.1、淡入
     	需要设置初识的div样式为display:none
	点击之后三个隐藏的div依次显示
	faseIn（）参数 slow fast或者毫秒

 <script type="text/javascript">
    $(document).ready(
       function(){
          $("button").click(
             function(){
                $("#div1").fadeIn();
                $("#div2").fadeIn("slow");	
                $("#div3").fadeIn(5000);	
             }
          )
       }//ready's body

    );//ready‘s body

 </script>
  <body>
     <button>点击淡入</button>
     <div id="div1" style="width:80px;height:80px; display:none;background-color:red;"></div>
     <div id="div2" style="width:80px;height:80px; display:none;background-color:green;"></div> 
     <div id="div3" style="width:80px;height:80px; display:none;background-color:blue;"></div> 
  </body>
</html>


15.2、淡出div
	fadeOut()
	$(selector).fadeOut(speed,callback)
	speed取slow fast或者毫秒
	callback fading完成后执行了函数名称

 <script type="text/javascript">

    $(document).ready(

       function(){

          $("button").click(

             function(){

                $("#div1").fadeOut();

                $("#div2").fadeOut("slow");	

                $("#div3").fadeOut(5000);	

             }

          )

       }//ready's body

    );//ready‘s body

 </script>


  <body>

     <button>点击淡入</button>

     <div id="div1" style="width:80px;height:80px; background-color:red;"></div>

     <div id="div2" style="width:80px;height:80px; background-color:green;"></div> 

     <div id="div3" style="width:80px;height:80px; background-color:blue;"></div> 

  </body>

点击之后单个div从上到下一次消失

15.3、点击淡入/淡出
    fadeToggle（）
	$(selector).fadeToggle(speed,callback)
	speed可选 slow fast 或者毫秒

<script type="text/javascript">
    $(document).ready(
       function(){
          $("button").click(
             function(){
                $("#div1").fadeToggle();
                $("#div2").fadeToggle("slow");	
                $("#div3").fadeToggle(5000);	
             }
          )
       }//ready's body
    );//ready‘s body
 </script>
  </head> 
  <body>
     <button>点击淡入</button>
     <div id="div1" style="width:80px;height:80px; background-color:red;"></div>
     <div id="div2" style="width:80px;height:80px; background-color:green;"></div> 
     <div id="div3" style="width:80px;height:80px; background-color:blue;"></div> 
  </body>

15.4、点击颜色变淡
	fadeTo()
	$(selector).fadeTo(speed,opacity,callback);
	speed 可选 slow fast或者毫秒
	opacity 介于 0 1之间

<script>
$(document).ready(function(){

  $("button").click(function(){

    $("#div1").fadeTo("slow",0.15);

    $("#div2").fadeTo("slow",0.4);

    $("#div3").fadeTo("slow",0.7);

  });

});

</script>

<p>演示 fadeTo() 使用不同参数</p>

<button>点我让颜色变淡</button>

<br><br>

<div id="div1" style="width:80px;height:80px;background-color:red;"></div><br>

<div id="div2" style="width:80px;height:80px;background-color:green;"></div><br>

<div id="div3" style="width:80px;height:80px;background-color:blue;"></div>






16、 动画

16.1、jQuery动画
	$(selector).animate({param},speed,callback);
	必须的param参数定义形成动画的css属性
	可选的speed参数规定效果的时长，可以取得 slow 、fast 或者毫秒
	可选的callback 参数是动画完成后所执行的函数名称
	默认情况下，html元素有一个静态的位置，是不可移动的，如果需要改变，则需要将元素的position属性设置为relative fixed 或absolute
16.2、操作单个css属性
$(document).ready(
       function(){
           $("button").click(
              function(){

                 $("#flip").animate({left:'250px'});
              }

           );

        }

    );//ready‘s body

 </script>


  <body>

     <button>开始动画</button>

     <div id="flip" style="width:80px;height:80px; background-color:#0A54FF;position:absolute;">滑动面板</div> 

  </body
   元素id 为flip的div向右移动250px；

16.3、操作多个css属性
    
<script type="text/javascript">
    $(document).ready(
       function(){
           $("button").click(
              function(){
                 $("#flip").animate({
                 	left:'250px',
                 	opacity:'0.5',
                 	height:'600px',
                 	width:'600px'
                 });
              }
           );
        }
    );//ready‘s body
 </script>

  <body>
     <button>开始动画</button>
     <div id="flip" style="width:80px;height:80px; background-color:#0A54FF;position:absolute;">滑动面板</div> 
  </body>

16.4、anmate使用相对值
<script type="text/javascript">

    $(document).ready(
       function(){
           $("button").click(
              function(){
                 $("#flip").animate({	
                 left:'250px',
                 opacity:'0.5',

                 height:'+=500px',
                 width:'+=500px'
                 });
              }
           );
        }

    );//ready‘s body

 </script>

16.5、animate使用队列动能
	<script type="text/javascript">
	   $(document).ready(
	      function(){
	          $("button").click(
	             function(){
                       var currentDiv = $("#flip");
                       //添加动画队列
                       //高度变高，颜色变淡
                       currentDiv.animate({height:'800px',opacity:'0.4',},"slow");
                       //宽度变宽，颜色变亮
                       currentDiv.animate({width:'800px',opacity:'0.8'},"slow");
                       //字体变大
                       currentDiv.animate({fontSize:'4em'},"slow");
                       //高度变低，颜色变淡
                       currentDiv.animate({height:'100px',opacity:'0.4',},"slow");
                       //宽度变窄，颜色变亮
                       currentDiv.animate({width:'100px',opacity:'0.8'},"slow");  
                       //字体变小
                       currentDiv.animate({fontSize:'1em'},"slow");                     
	             }
	          );
	       }
	   );//ready‘s body
	</script>
  </head> 
  <body>
     <button>开始动画</button>
     <div id="flip" style="width:80px;height:80px; background-color:#0A54FF;position:absolute;">滑动面板</div>   
  </body>


17、滑动



17.1、slideDown（）滑下
	$(selector).slideDown(speed,callback)
	speed 取slow fast或者毫秒
	callback为滑动完成后所执行的函数名称

<script type="text/javascript">

    $(document).ready(

       function(){

          $("#flip").click(

             function(){

                $("#panel").slideDown("slow"); 

             }

          )

       }//ready's body

    );//ready‘s body

 </script>

  <body>

     <button>点击淡入</button>

     <div id="flip" style="width:80px;height:80px; background-color:#0A54FF;">点我滑下面板</div>

     <div id="panel" style="width:80px;height:80px; display:none;background-color:green;">Hello world！</div> 

  </body>

17.2、slideUp（）滑上
	$(selector).slideUp(speed,callback)
	speed 取slow fast或者毫秒
	callback为滑动完成后所执行的函数名称
<script type="text/javascript">

    $(document).ready(

       function(){

          $("#flip").click(

             function(){

                $("#panel").slideUp("slow"); 

             }

          )

       }//ready's body

    );//ready‘s body

 </script>


  <body>

     <div id="flip" style="width:80px;height:80px; background-color:#0A54FF;">点我滑下面板</div>

     <div id="panel" style="width:80px;height:80px;background-color:green;">Hello world！</div> 

  </body>

17.3、slideToggle滑上/滑下
	$(selector).slideToggle(speed,callback)
	speed 取slow fast或者毫秒
	callback为滑动完成后所执行的函数名称
<script type="text/javascript">

    $(document).ready(

       function(){

          $("#flip").click(

             function(){

                $("#panel").slideToggle("slow"); 

             }

          )

       }//ready's body

    );//ready‘s body

 </script>


  <body>

     <div id="flip" style="width:80px;height:80px; background-color:#0A54FF;">点我滑下面板</div>

     <div id="panel" style="width:80px;height:80px;background-color:green;">Hello world！</div> 

  </body>


18、获取并设置css类

	jQuery操作CSS
  	addClass() 向被选元素添加一个或多个类
  	removeClass() 从被选元素删除一个或多个类
  	toggleClass() 对被选元素进行添加/删除类的切换操作
  	css() 设置或返回样式属性

   <body>
	  <div id="kk" style="width:100px;height:100px;border:1px solid;">this is div</div>
      <button id="btn1">button</button>	  
   </body>

$(document).ready(
   function(){
	   $("#btn1").click(
	      function(){
              $("#kk").toggleClass("important");			  			  
		  }
	   );//btn1 body
   }
)

css
.important{
	width:800px;
	height:600px;
	background-color:#DB7093;
	font-size:5px;
}


$("h1 h2 p").removeClass("blue");




19、基础过滤

19.1eq()Selector

	描述：在匹配的集合中选择索引值为index的元素
	$(":eq(index)") :index 要匹配元素的索引值(从0开始计数)
	$(":eq(-index)"):-index要匹配元素的索引值（从0开始计数）从最后一个元素倒计数

19.2、：even Selector
	描述：选择索引值为偶数的元素，从0开始计数，也可以查看odd（奇数）
	语法 $(":even")
19.3、：first Selector
	描述：选择第一个匹配的元素
	语法：$(":first")
19.4、：focus Selector
	描述：选择当前获取焦点的元素
	$(":focus")
19.5、:header Selector
	描述：选择所有标题元素，像h1 h2 h3等
	$(":header")

例子

 <body>

    <div id="content">

     <input tabindex="1"/>

     <input tabindex="2"/>	

     <input tabindex="3"/>

  	<select>

     <option>

     	select menu

      </option>	

  	</select>

     <div tabindex="4">a div</div>

    </div>

 </body>

</html>
css
.focused{

 background-color:#abcdef;

}
js
$(function(){
 //为所有的元素（*）设置事件，事件为获取焦点和失去焦点（focus blur）
   $("#content").delegate("*","focus blur",function(event){
       	var e = $(this);
    		//setTimeout在一定事件后执行一个事件
    		setTimeout(
       		function(){
     			e.toggleClass("focused",e.is(":focus"));
    			},0
    		)
 
   })	
 
})


19.6、：last Selector
	描述：选择最后一个匹配的元素
	语法:$(":last")

19.7、：gt（）Selector
	描述：选择匹配集合中所有大于给定index（索引值得元素）
	语法：$(":gt(index)")或者 $(":gt(-index)")

19.8、：lt（）Selector
	描述：选择匹配集合中所有小于给定index（索引值得元素）
	语法：$(":lt(index)")或者 $(":lt(-index)")

例子
<table border="1">

           <tr>

             <td>TD #0</td>

    <td>TD #1</td>

    <td>TD #2</td>

           </tr>

           <tr>

             <td>TD #3</td>

    <td>TD #4</td>

    <td>TD #5</td>

           </tr>

           <tr>

             <td>TD #6</td>

    <td>TD #7</td>

    <td>TD #8</td>

           </tr>	

       </table>
js
$(function(){

    $("td:lt(5)").css("color","red");	

 

})


20、停止动画

1、停止slideDown
<script> 
$(document).ready(function(){
  $("#flip").click(function(){
    $("#panel").slideDown(5000);
  });
  $("#stop").click(function(){
    $("#panel").stop();
  });
});
</script>

2、stop函数
$(selector).stop(stopAll,goToEnd)
可选的stopAll参数规定是否应该清楚动画队列，默认是false 即停止活动的动画，同时动画向后执行
goToEnd 是否立即完成当前动画，默认是false

   

21、添加元素

1、添加新的html内容

    	append()在被选元素结尾插入内容
 	prepend() 在被选元素的开头插入内容
	after（）在被选元素之后插入内容
	before（）在被选元素之前插入内容
	如p标签   （”p“）.append("append content");

2、 删除元素

	remove() 删除被选元素（及其子元素）
	empty（） 从被选元素中删除子元素

	如 $("p").remove()

	有参数的删除（过滤删除的元素）
	如删除class=italic的所有<p>元素
	$("p").remove(".italic")

3、方法链接
	$("#p1").css("color","red").slideUp(2000).slideDown(2000);
	p1元素先变颜色为红色，在向上滑动，让后向下滑动



22、 width和height

	width() 设置或返回元素的宽度（不包括内边距边框或外边距）
	height() 设置或返回元素的高度（不包括内边距边框或外边距）

	innerWidth（）返回元素的宽度（包括内边距）
	innerHeight（）返回元素的高度（包括内边距）

	outerWidth（） 返回元素的宽度（包括内边距和边框）
	outerHeight（）返回元素的高度（包括内边距和边框）



23、 AJAX

23.1、简介
    ajax是与服务器交换数据的技术，在不重载全部页面的情况下，实现了对部分网页的更新

23.2、什么是ajax
	异步javascript 和xml
	在不重载全部页面的情况下，通过后台接在数据，并在网页上进行显示
23.3、关系
	jQuery提供多个与ajax有关的方法
	通过 jQuery AJAX方法 能够使用HTTP get和HTTP post从远程服务器上请求文本、html、xml、json同时能够把这些外部数据直接
	载入网页的被选元素中

23.4、编写常规的ajax代码并不容易，因为不同的浏览器对ajax的实现并不相同
	这意味着必须编写额外的代码对浏览器进行测试，而jQuery解决了这个问题，

23.5、jQuery load（）方法
	load()方法从服务器加载数据，并把返回的数据放入被选元素中
	语法
	$(selector).load( URL,data,callback);
	url 希望加载的url
	data 与请求一同发送的查询字符串键值对集合
	callback load方法完成后所执行的函数名称

23.6、ajax get和post方法

	从服务器请求数据
	GET 从指定的资源请求数据
	POST 向指定的资源提交要处理的数据

	$.get()方法
		语法 $.get(url,callback)
	post
	$.post()
	语法$.post(url,data,callback)
	可选的data 参数规定连同请求发送的看数据

$("button").click(function(){
    //请求的url
    $.post("/try/ajax/demo_test_post.php",
    {  //data部分
        name:"教程",
        url:"http://www.rb.com"
    },
        //回调函数
        function(data,status){
        alert("数据: \n" + data + "\n状态: " + status);
    });
});



24、滚动条

	
	滚动事件

	$(window).scroll(function(){});


	获取滚动条的位置

	$(window).scrollTop();


25、元素到顶部的举例

	元素.offset().top();


26、为元素添加类

	元素.addClass("clazz,无点");

	移除
	removeClass();















