 

                                              Bootstrap


1、自适应
<head>
   <meta charset="utf-8"> 
   <!--移动设备优先确保适当的绘制和触屏缩放，添加viewport -->
   <!-- 通过viewport meta 标签 添加user-scalable=no 可以禁用其缩放功能 -->
   <!-- 通常情况下，maximum-scale=1.0 user-scalable=no 可以禁用缩放功能，用户只能滚动屏幕-->
   <!-- 如<meta name="viewport" content="width=device-width, 
                                     initial-scale=1.0, 
                                     maximum-scale=1.0, 
                                     user-scalable=no">-->
   <meta name="viewport" content="width=device-width,initial-scale=1.0">
   <title>这是Bootstrap</title>
   <!-- 核心css文件-->
   <link rel="stylesheet" href="css/bootstrap.min.css">  
   <!-- jquery文件，在bootstrap之前引入-->
   <script src="js/jquery.min.js"></script>
   <script src="js/bootstrap.min.js"></script>
</head>


2、容器 Container

<div class="container">
    .......
</div>

.container {
   padding-right: 15px;
   padding-left: 15px;
   margin-right: auto;
   margin-left: auto;
}




3、 列表

<h4>有序列表</h4>
<ol>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
</ol>

<h4>无序列表</h4>
<ul>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
</ul>

<h4>未定义样式列表</h4>
<ul class="list-unstyled">
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
</ul>


适合导航
<h4>内联列表</h4>
<ul class="list-inline">
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
</ul>


<h4>定义列表</h4>
<dl>
  <dt>Description 1</dt>
  <dd>Item 1</dd>
  <dt>Description 2</dt>
  <dd>Item 2</dd>
</dl>

<h4>水平的定义列表</h4>
<dl class="dl-horizontal">
  <dt>Description 1</dt>
  <dd>Item 1</dd>
  <dt>Description 2</dt>
  <dd>Item 2</dd>
</dl>






4、浮动

		
类	         	描述	
.pull-left		元素浮动到左边	
.pull-right		元素浮动到右边	
.center-block		设置元素为 display:block 并居中显示	
.clearfix		清除浮动	
.show			强制元素显示	
.hidden			强制元素隐藏	
.sr-only		除了屏幕阅读器外，其他设备上隐藏元素	
.sr-only-focusable	与 .sr-only 类结合使用，在元素获取焦点时显示(如：键盘操作的用户)	
.text-hide		将页面元素所包含的文本内容替换为背景图	
.close			显示关闭按钮	
.caret			显示下拉式功能	





5、表单

boot的表单布局
1、垂直表单
2、内联表单
3、水平表单

创建表单的步骤

1、向父 <form> 元素添加role="form"。
2、把标签和控件放在一个带有 class .form-group 的 <div> 中。这是获取最佳间距所必需的。
3、向所有的文本元素 <input>、<textarea> 和 <select> 添加 class .form-control。
4、垂直或者基本表单
<form role="form">
	<div class="form-group">
      	<label for="name">名称</label>
   		<input type="text" class="form-control" id="name" placeholder="请输入名称"></input>
   	</div>
   	<div class="form-group">
      	<label for="name">文件输入</label>
   		<input type="file" id="inputfile"></input>	
   		<p class="help-block">这是块级帮助文本的实例</p>
   	</div>
   	<div>
      	<label>
      		<input type="checkbox"/>请打勾
   		</label>
   	</div>
   	<button type="submit" class="btn btn-default">提交</button>
   </form>

5、内联表单
   表单，多有元素是内联的，向左对齐的，标签是并排的，需要向form标签中添加class .form-inline
   引用自己的css 、bootstrap 及jquery是不起作用的，需要引用官方的文件
<!DOCTYPE html>
<html>
<head>
 <meta charset="utf-8"> 
 <title>Bootstrap 实例 - 水平表单</title>
 <link rel="stylesheet" href="http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap.min.css"> 
 <script src="http://cdn.static.runoob.com/libs/jquery/2.1.1/jquery.min.js"></script>
 <script src="http://cdn.static.runoob.com/libs/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<body>
<form class="form-inline" role="form">
  <div class="form-group">
    <label class="sr-only" for="name">名称</label>
    <input type="text" class="form-control" id="name" placeholder="请输入名称">
  </div>
  <div class="form-group">
    <label class="sr-only" for="inputfile">文件输入</label>
    <input type="file" id="inputfile">
  </div>
  <div class="checkbox">
    <label>
      <input type="checkbox">请打勾
    </label>
  </div>
  <button type="submit" class="btn btn-default">提交</button>
</form>

</body>
</html>

6、水平表单
    <div class="col-sm-offset-2 col-sm-10">
    div向右偏移两个，占位10个

加入class="form-horizontal"类
<body>
  <form class="form-horizontal" role="form">
  <div class="form-group">
    <label for="firstname" class="col-sm-2 control-label">名字</label>
    <div class="col-sm-10">
      <input type="text" class="form-control" id="firstname" placeholder="请输入名字">
    </div>
  </div>
  <div class="form-group">
    <label for="lastname" class="col-sm-2 control-label">姓</label>
    <div class="col-sm-10">
      <input type="text" class="form-control" id="lastname" placeholder="请输入姓">
    </div>
  </div>
  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <div class="checkbox">
        <label>
          <input type="checkbox">请记住我
        </label>
      </div>
    </div>
  </div>
  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <button type="submit" class="btn btn-default">登录</button>
    </div>
  </div>
  </form>
  </body>



7、支持表单的控件

	输入框input类型： 
	text 、password 、datetime 、datetime-local、date（日期） month、time、week、number、email、url、search、tel和color（可选择颜色）


	通过在css也可以控制修改成自己需要的样式
	如style=“width:500px;height:600px;”

8、文本框
<form role="form">
   <div class="form-group">
       <label for="name">文本框</label>
       <textarea class="form-control" rows="3"></textarea>
   </div>
</form>

9、单选框复选框
<!DOCTYPE html>
<html>
<head>

 <meta charset="utf-8"> 
 <title>Bootstrap 实例 - 复选框和单选按钮</title>
 <link rel="stylesheet" href="http://cdn.static.runoob.com/libs/bootstrap/3.3.7/css/bootstrap.min.css"> 
 <script src="http://cdn.static.runoob.com/libs/jquery/2.1.1/jquery.min.js"></script>
 <script src="http://cdn.static.runoob.com/libs/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<body>
<label for="name">默认的复选框和单选按钮的实例</label>
<div class="checkbox">
 <label><input type="checkbox" value="">选项 1</label>
</div>

<div class="checkbox">
 <label><input type="checkbox" value="">选项 2</label>
</div>
<div class="radio">
 <label>
  <input type="radio" name="optionsRadios" id="optionsRadios1" value="option1" checked> 选项 1
 </label>
</div>

<div class="radio">
 <label>
  <input type="radio" name="optionsRadios" id="optionsRadios2" value="option2">选项 2 - 选择它将会取消选择选项 1
 </label>
</div>

<label for="name">内联的复选框和单选按钮的实例</label>

<div>
 <label class="checkbox-inline">
  <input type="checkbox" id="inlineCheckbox1" value="option1"> 选项 1
 </label>

 <label class="checkbox-inline">
  <input type="checkbox" id="inlineCheckbox2" value="option2"> 选项 2
 </label>

 <label class="checkbox-inline">
  <input type="checkbox" id="inlineCheckbox3" value="option3"> 选项 3
 </label>

 <label class="checkbox-inline">
  <input type="radio" name="optionsRadiosinline" id="optionsRadios3" value="option1" checked> 选项 1
 </label>

 <label class="checkbox-inline">
  <input type="radio" name="optionsRadiosinline" id="optionsRadios4" value="option2"> 选项 2
 </label>
</div>

</body>
</html>


10、选择框
<form role="form">
 <div class="form-group">
  <label for="name">选择列表</label>
  <select class="form-control">
   <option>1</option>
   <option>2</option>
   <option>3</option>
   <option>4</option>
   <option>5</option>
  </select>
  <label for="name">可多选的选择列表</label>
  <select multiple class="form-control">
   <option>1</option>
   <option>2</option>
   <option>3</option>
   <option>4</option>
   <option>5</option>
  </select>
 </div>
</form>

11、静态控件
<p class="form-control-static">email@example.com</p>

12、表单控件状态
<form class="form-horizontal" role="form">
  <div class="form-group">
    <label class="col-sm-2 control-label">聚焦</label>
    <div class="col-sm-10">
      <input class="form-control" id="focusedInput" type="text" value="该输入框获得焦点...">
    </div>
  </div>
  <div class="form-group">
    <label for="inputPassword" class="col-sm-2 control-label">禁用</label>
    <div class="col-sm-10">
      <input class="form-control" id="disabledInput" type="text" placeholder="该输入框禁止输入..." disabled>
    </div>
  </div>
  <fieldset disabled>
    <div class="form-group">
      <label for="disabledTextInput" class="col-sm-2 control-label">禁用输入（Fieldset disabled）</label>
      <div class="col-sm-10">
        <input type="text" id="disabledTextInput" class="form-control" placeholder="禁止输入">
      </div>
    </div>
    <div class="form-group">
      <label for="disabledSelect" class="col-sm-2 control-label">禁用选择菜单（Fieldset disabled）</label>
      <div class="col-sm-10">
        <select id="disabledSelect" class="form-control">
          <option>禁止选择</option>
        </select>
      </div>
    </div>
  </fieldset>
  <div class="form-group has-success">
    <label class="col-sm-2 control-label" for="inputSuccess">输入成功</label>
    <div class="col-sm-10">
      <input type="text" class="form-control" id="inputSuccess">
    </div>
  </div>
  <div class="form-group has-warning">
    <label class="col-sm-2 control-label" for="inputWarning">输入警告</label>
    <div class="col-sm-10">
      <input type="text" class="form-control" id="inputWarning">
    </div>
  </div>
  <div class="form-group has-error">
    <label class="col-sm-2 control-label" for="inputError">输入错误</label>
    <div class="col-sm-10">
      <input type="text" class="form-control" id="inputError">
    </div>
  </div>
</form>


13、 响应式图像，图片随着浏览器的大小发生改变

<img src="..." class="img-responsive" alt="响应式图像">

这个类中的设置如下：height auto用来按比例缩放，不超过父元素的尺寸
.img-responsive {
  display: inline-block;
  height: auto;
  max-width: 100%;
}



14、字体
<h1>我是标题1 h1</h1>
<h2>我是标题2 h2</h2>
<h3>我是标题3 h3</h3>
<h4>我是标题4 h4</h4>
<h5>我是标题5 h5</h5>
<h6>我是标题6 h6</h6>

<small>本行内容是在标签内</small><br>
<strong>本行内容是在标签内</strong><br>
<em>本行内容是在标签内，并呈现为斜体</em><br>
<p class="text-left">向左对齐文本</p>
<p class="text-center">居中对齐文本</p>
<p class="text-right">向右对齐文本</p>
<p class="text-muted">本行内容是减弱的</p>
<p class="text-primary">本行内容带有一个 primary class</p>
<p class="text-success">本行内容带有一个 success class</p>
<p class="text-info">本行内容带有一个 info class</p>
<p class="text-warning">本行内容带有一个 warning class</p>
<p class="text-danger">本行内容带有一个 danger class</p>

15、地址
<address>
  <strong>Some Company, Inc.</strong><br>
  007 street<br>
  Some City, State XXXXX<br>
  <abbr title="Phone">P:</abbr> (123) 456-7890
</address>

<address>
  <strong>Full Name</strong><br>
  <a href="mailto:#">mailto@somedomain.com</a>
</address>




16、按钮

<!-- 标准的按钮 -->
<button type="button" class="btn btn-default">默认按钮</button>
<!-- 提供额外的视觉效果，标识一组按钮中的原始动作 -->
<button type="button" class="btn btn-primary">原始按钮</button>
<!-- 表示一个成功的或积极的动作 -->
<button type="button" class="btn btn-success">成功按钮</button>
<!-- 信息警告消息的上下文按钮 -->
<button type="button" class="btn btn-info">信息按钮</button>
<!-- 表示应谨慎采取的动作 -->
<button type="button" class="btn btn-warning">警告按钮</button>
<!-- 表示一个危险的或潜在的负面动作 -->
<button type="button" class="btn btn-danger">危险按钮</button>
<!-- 并不强调是一个按钮，看起来像一个链接，但同时保持按钮的行为 -->
<button type="button" class="btn btn-link">链接按钮</button>





17、按钮大小
<p>
  <button type="button" class="btn btn-primary btn-lg">大的原始按钮</button>
  <button type="button" class="btn btn-default btn-lg">大的按钮</button>
</p>

<p>
  <button type="button" class="btn btn-primary">默认大小的原始按钮</button>
  <button type="button" class="btn btn-default">默认大小的按钮</button>
</p>

<p>

  <button type="button" class="btn btn-primary btn-sm">小的原始按钮</button>
  <button type="button" class="btn btn-default btn-sm">小的按钮</button>

</p>

<p>
  <button type="button" class="btn btn-primary btn-xs">特别小的原始按钮</button>
  <button type="button" class="btn btn-default btn-xs">特别小的按钮</button>
</p>

<p>
  <button type="button" class="btn btn-primary btn-lg btn-block">块级的原始按钮</button>
  <button type="button" class="btn btn-default btn-lg btn-block">块级的按钮</button>
</p>


3、按钮的状态
<p>
  <button type="button" class="btn btn-default btn-lg ">默认按钮</button>
  <button type="button" class="btn btn-default btn-lg active">激活按钮</button>
</p>
<p>
  <button type="button" class="btn btn-primary btn-lg ">原始按钮</button>
  <button type="button" class="btn btn-primary btn-lg active">激活的原始按钮</button>
</p>



18、表格

表格类
.table 添加基本样式（只有横向分割线）
.table-striped  [straɪpt] 在<tbody>内添加斑马线形式的条文（IE8不支持）
.table-bordered 为所有表格的单元格添加边框
.table-hover 在<tbody>内人一行启用鼠标悬停状态
.table-condensed[kən'denst] 让表格更加紧凑

.table的样例
<table class="table">

  <thead>
     <tr>
     	<th>#</th>
     	<th>Firstname</th>
  	</tr>
  </thead>

  <tbody>
     <tr>
     	<td>1</td>
     	<td>A</td>
  	</tr>
     <tr>
     	<td>2</td>
     	<td>B</td>
  	</tr>
     <tr>
     	<td>3</td>
     	<td>C</td>
  	</tr>	
  </tbody>
  <tbody></tbody>
  </table>


只有横向的单元格
<table class=" table table-striped"></table>
<table class=" table table-striped table-bordered"></table>
<table class=" table table-striped table-bordered table-hover"></table> 鼠标悬停在tbody的每一行时，颜色变深，起到着重的效果，最好不要斑马线那个效果，效果会更好
<table class=" table table-bordered table-hover table-condenced"></table>

<tr><th><td>类
.active 将悬停的颜色应用在行或者单元格上
.success 表示成功的操作
.info 表示信息变化的操作
.warning 表示警告的操作
.danger 表示一个危险的操作

<table class="table">
  <caption>上下文表格布局</caption>
  <thead>
    <tr>
      <th>产品</th>
      <th>付款日期</th>
      <th>状态</th></tr>
  </thead>
  <tbody>
    <tr class="active">
      <td>产品1</td>
      <td>23/11/2013</td>
      <td>待发货</td></tr>
    <tr class="success">
      <td>产品2</td>
      <td>10/11/2013</td>
      <td>发货中</td></tr>
    <tr class="warning">
      <td>产品3</td>
      <td>20/10/2013</td>
      <td>待确认</td></tr>
    <tr class="danger">
      <td>产品4</td>
      <td>20/10/2013</td>
      <td>已退货</td></tr>
  </tbody>
</table>


响应式表格
将table 包在table-responsive内，可以让表格自适应小型设备（小于768px）
<div class="table-responsive">
 <table class="table">
  <caption>上下文表格布局</caption>
  <thead>
    <tr>
      <th>产品</th>
      <th>付款日期</th>
      <th>状态</th></tr>
  </thead>
  <tbody>
    <tr class="active">
      <td>产品1</td>
      <td>23/11/2013</td>
      <td>待发货</td></tr>
    <tr class="success">
      <td>产品2</td>
      <td>10/11/2013</td>
      <td>发货中</td></tr>
    <tr class="warning">
      <td>产品3</td>
      <td>20/10/2013</td>
      <td>待确认</td></tr>
    <tr class="danger">
      <td>产品4</td>
      <td>20/10/2013</td>
      <td>已退货</td></tr>
  </tbody>
 </table>
</div>



19、字体图标    

<span class="glyphicon glyphicon-search"></span>

<p>
    <button type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-sort-by-attributes"></span>
    </button>
    <button type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-sort-by-attributes-alt"></span>
    </button>
    <button type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-sort-by-order"></span>
    </button>
    <button type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-sort-by-order-alt"></span>
    </button>
</p>
<button type="button" class="btn btn-default btn-lg">
    <span class="glyphicon glyphicon-user"></span>
    User
</button>
<button type="button" class="btn btn-default btn-sm">
    <span class="glyphicon glyphicon-user"></span>
    User
</button>
<button type="button" class="btn btn-default btn-xs">
    <span class="glyphicon glyphicon-user"></span>
    User
</button>


带有导航栏的字体图标

<div class="navbar navbar-fixed-top navbar-inverse" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Project name</a>
        </div>
        <div class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
                <li class="active">
                    <a href="#">
                        <span class="glyphicon glyphicon-home">Home</span></a>
                </li>
                <li>
                    <a href="#shop">
                        <span class="glyphicon glyphicon-shopping-cart">Shop</span></a>
                </li>
                <li>
                    <a href="#support">
                        <span class="glyphicon glyphicon-headphones">Support</span></a>
                </li>
            </ul>
        </div>
        <!-- /.nav-collapse -->
    </div>
    <!-- /.container -->
</div>



20、Bootstrap网格系统是如何工作的

行必须放置在 .container class 内，以便获得适当的对齐（alignment）和内边距（padding）。
使用行来创建列的水平组。
内容应该放置在列内，且唯有列可以是行的直接子元素。
预定义的网格类，比如 .row 和 .col-xs-4，可用于快速创建网格布局。LESS 混合类可用于更多语义布局。
列通过内边距（padding）来创建列内容之间的间隙。该内边距是通过 .rows 上的外边距（margin）取负，表示第一列和最后一列的行偏移。
网格系统是通过指定您想要横跨的十二个可用的列来创建的。例如，要创建三个相等的列，则使用三个 .col-xs-4
实例

网格系统堆叠的水平
<body>

<div class="container">
   <h1>Hello, world!</h1>

   <div class="row">

      <div class="col-md-6"  style="background-color: #dedef8; box-shadow: 
         inset 1px -1px 1px #444, inset -1px 1px 1px #444;">
         <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do 
            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut 
            enim ad minim veniam, quis nostrud exercitation ullamco laboris 
            nisi ut aliquip ex ea commodo consequat. 
         </p>

         <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem 
            accusantium doloremque laudantium, totam rem aperiam, eaque ipsa 
            quae ab illo inventore veritatis et quasi architecto beatae vitae 
            dicta sunt explicabo. 
         </p>
      </div>

      <div class="col-md-6" style="background-color: #dedef8;box-shadow: 
         inset 1px -1px 1px #444, inset -1px 1px 1px #444;">
         <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem 
            accusantium doloremque laudantium.
         </p>

         <p> Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, 
            consectetur, adipisci velit, sed quia non numquam eius modi 
            tempora incidunt ut labore et dolore magnam aliquam quaerat 
            voluptatem. 
         </p>
   </div>
</div>
</body>
<div class="container">...</div> 元素被添加，确保居中和最大宽度。

一旦添加了容器，接下来您需要考虑以行为单位。添加 <div class="row">...</div>，并在行内添加列 <div class="col-md-6"></div>。
网格中的每一行是由 12 个单元组成的，您可以使用这些单元定义列的尺寸。在我们的实例中，有两个列，每个列由 6 个单元组成，即 6+6=12。
您可以尝试其他更多的选项，
比如 <div class="col-md-3"></div> 和 <div class="col-md-9"></div> 或 <div class="col-md-7"></div> 和 <div class="col-md-5"></div>。


媒体查询
有条件的css规则，它只适用于一些基于某些规定条件的csss，如果满足那些条件，则应用相应的样式
/* 超小设备（手机，小于 768px） */
/* Bootstrap 中默认情况下没有媒体查询 */

/* 小型设备（平板电脑，768px 起） */
@media (min-width: @screen-sm-min) { ... }

/* 中型设备（台式电脑，992px 起） */
@media (min-width: @screen-md-min) { ... }

/* 大型设备（大台式电脑，1200px 起） */
@media (min-width: @screen-lg-min) { ... }

有时候也会在媒体查询代码中包含 max-width，从而将css的影响限制在更小范围的屏幕大小之内
@media (max-width: @screen-xs-max) { ... }
@media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) { ... }
@media (min-width: @screen-md-min) and (max-width: @screen-md-max) { ... }
@media (min-width: @screen-lg-min) { ... }



21、图片

.img-rounded：添加 border-radius:6px 来获得图片圆角。
<img src="img/tt.jpg" class="img-rounded">（IE8不支持）
.img-circle：添加 border-radius:50% 来让整个图片变成圆形。
<img src="img/tt.jpg" class="img-circle">（IE8不支持）
.img-thumbnail：添加一些内边距（padding）和一个灰色的边框。
<img src="img/tt.jpg" class="img-thumbnail">    

响应式图片
.img-responsive 类将 max-width: 100%; 和 height: auto; 样式应用在图片上：

22、图标列表

信息   glyphicon glyphicon-envelopse
笔     glyphicon glyphicon-pencil
人     glyphicon glyphicon-user
关闭   glyphicon glyphicon-off
设置   glyphicon glyphicon-cog
删除   glyphicon glyphicon-trash
HOME   glyphicon glyphicon-home
下载   glyphicon glyphicon-download-alt
刷新   glyphicon glyphicon-refresh
锁     glyphicon glyphicon-lock
本     glyphicon glyphicon-book
上一页   glyphicon glyphicon-backward
下一页   glyphicon glyphicon-forward
到头     glyphicon glyphicon-fast-backward
到尾     glyphicon glyphicon-fast-forward
添加     glyphicon glyphicon-plus-sign
电话     glyphicon glyphicon-phone-alt



