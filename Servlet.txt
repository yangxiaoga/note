

	Servlet

1、什么是Servlet
	运行在Web服务器或应用服务器上的程序
	作为Web浏览器或其他Http客户端的请求和Http服务器上的数据库或应用程序之间的中间层

2、特点
     Servlet是独立于平台的

3、Servlet任务
	读取表单数据
	发送隐式的Http请求数据，包括cookies、媒体类型和浏览器能理解的压缩格式等等
	处理数据生成结果

4、Servlet生命周期
	通过调用init（）方法进行初始化
	service（）方法处理客户端请求
	destroy（）方法终止
	由JVM进行垃圾回收

	init方法被设计成只调用一次，在第一次创建servlet时被调用，
	后续用户请求时不再调用，用于一次性初始化

	当用户调用一个servlet时，就会创建一个servlet实例，每一个用户请求都会产生一个新的线程

	init方法简单的创建或加载一些数据，这些数据将用于servlet整个生命周期
	public void init() throws ServletException{	}

	service方法是执行任务的主要方法，servlet容器调用service方法处理来自客户端
	的请求，并把格式化的响应写回给客户端，service方法检查Http 请求类型 GET POST PUT DELETE 等在适当的时候
	调用doGet doPost doPut doDelete

  	public void service(ServletRequest request,ServletResponse response) 
        throws ServletException,IOException {  }

   	doGet：处理指定method为get的html表单
    	public void doGet(HttpServletRequest request,HttpServletResponse response) throws ServletException,IOException{  }

	doPost：处理指定method为post的html表单
    	public void doPost(HttpServletRequest request,HttpServletResponse response){ }

	destroy方法
	只会被调用一次，在Servlet声明周期结束时被调用
	该方法可以让Servlet关闭数据库连接，停止后台线程，
	把Cookie列表或点击计数器写入到磁盘，并执行其他类似的清理活动

	在调用destroy后，servlet对象被标记为垃圾回收

5、get和post

	get方法
   		默认的从浏览器想web服务器传递信息的方法，会产生一个很长的字符串，出现在浏览器的地址栏中，
		如果想服务器传递的是密码等其他敏感信息，不要使用GET方法，并且GET方法有大小限制，请求字符
		串最多只能有1024个字符
	post方法
	向后台程序长度信息的比较可靠的方法，方法打包信息的方式与get方法基本想用，
	但是post方法不是把信息作为URL中？字符后的文本字符串进行发送，而是把信息作为一个单独的消息，
	消息以标准输出的形式传到后台程序，可以解析和使用这些标准输出，使用doPost处理

6、Servlet读取表单数据
	getParameter（）  获取表单参数的值
	getParameterValues（）如果参数出现一次以上，则调用该方法，从返回多个值，例如复选框
	getParameterNames（)  如果想要得到当前请求中所有参数的完整列表，则调用该方法


7、HTTP请求

头信息		描述
Accept		这个头信息指定浏览器或其他客户端可以处理的 MIME 类型。值 image/png 或 image/jpeg 是最常见的两种可能值。
Accept-Charset	这个头信息指定浏览器可以用来显示信息的字符集。例如 ISO-8859-1。
Accept-Encoding	这个头信息指定浏览器知道如何处理的编码类型。值 gzip 或 compress 是最常见的两种可能值。
Accept-Language	这个头信息指定客户端的首选语言，在这种情况下，Servlet 会产生多种语言的结果。例如，en、en-us、ru 等。
Authorization	这个头信息用于客户端在访问受密码保护的网页时识别自己的身份。
Connection	这个头信息指示客户端是否可以处理持久 HTTP 连接。持久连接允许客户端或其他浏览器通过单个请求来检索多个文件。值 Keep-Alive 意味着使用了持续连接。
Content-Length	这个头信息只适用于 POST 请求，并给出 POST 数据的大小（以字节为单位）。
Cookie		这个头信息把之前发送到浏览器的 cookies 返回到服务器。
Host		这个头信息指定原始的 URL 中的主机和端口。
If-Modified-Since   这个头信息表示只有当页面在指定的日期后已更改时，客户端想要的页面。如果没有新的结果可以使用，服务器会发送一个 304 代码，表示 Not Modified 头信息。
If-Unmodified-Since 这个头信息是 If-Modified-Since 的对立面，它指定只有当文档早于指定日期时，操作才会成功。
Referer		这个头信息指示所指向的 Web 页的 URL。例如，如果您在网页 1，点击一个链接到网页 2，当浏览器请求网页 2 时，网页 1 的 URL 就会包含在 Referer 头信息中。
User-Agent	这个头信息识别发出请求的浏览器或其他客户端，并可以向不同类型的浏览器返回不同的内

8、读取HTTP头的方法：

序号	方法 & 描述
1	Cookie[] getCookies()
	返回一个数组，包含客户端发送该请求的所有的 Cookie 对象。
2	Enumeration getAttributeNames()
	返回一个枚举，包含提供给该请求可用的属性名称。
3	Enumeration getHeaderNames()
	返回一个枚举，包含在该请求中包含的所有的头名。
4	Enumeration getParameterNames()
	返回一个 String 对象的枚举，包含在该请求中包含的参数的名称。
5	HttpSession getSession()
	返回与该请求关联的当前 session 会话，或者如果请求没有 session 会话，则创建一个。
6	HttpSession getSession(boolean create)
	返回与该请求关联的当前 HttpSession，或者如果没有当前会话，且创建是真的，则返回一个新的 session 会话。
7	Locale getLocale()
	基于 Accept-Language 头，返回客户端接受内容的首选的区域设置。
8	Object getAttribute(String name)
	以对象形式返回已命名属性的值，如果没有给定名称的属性存在，则返回 null。
9	ServletInputStream getInputStream()
	使用 ServletInputStream，以二进制数据形式检索请求的主体。
10	String getAuthType()
	返回用于保护 Servlet 的身份验证方案的名称，例如，"BASIC" 或 "SSL"，如果JSP没有受到保护则返回 null。
11	String getCharacterEncoding()
	返回请求主体中使用的字符编码的名称。
12	String getContentType()
	返回请求主体的 MIME 类型，如果不知道类型则返回 null。
13	String getContextPath()
	返回指示请求上下文的请求 URI 部分。
14	String getHeader(String name)
	以字符串形式返回指定的请求头的值。
15	String getMethod()
	返回请求的 HTTP 方法的名称，例如，GET、POST 或 PUT。
16	String getParameter(String name)
	以字符串形式返回请求参数的值，或者如果参数不存在则返回 null。
17	String getPathInfo()
	当请求发出时，返回与客户端发送的 URL 相关的任何额外的路径信息。
18	String getProtocol()
	返回请求协议的名称和版本。
19	String getQueryString()
	返回包含在路径后的请求 URL 中的查询字符串。
20	String getRemoteAddr()
	返回发送请求的客户端的互联网协议（IP）地址。
21	String getRemoteHost()
	返回发送请求的客户端的完全限定名称。
22	String getRemoteUser()
	如果用户已通过身份验证，则返回发出请求的登录用户，或者如果用户未通过身份验证，则返回 null。
23	String getRequestURI()
	从协议名称直到 HTTP 请求的第一行的查询字符串中，返回该请求的 URL 的一部分。
24	String getRequestedSessionId()
	返回由客户端指定的 session 会话 ID。
25	String getServletPath()
	返回调用 JSP 的请求的 URL 的一部分。
26	String[] getParameterValues(String name)
	返回一个字符串对象的数组，包含所有给定的请求参数的值，如果参数不存在则返回 null。
27	boolean isSecure()
	返回一个布尔值，指示请求是否使用安全通道，如 HTTPS。
28	int getContentLength()
	以字节为单位返回请求主体的长度，并提供输入流，或者如果长度未知则返回 -1。
29	int getIntHeader(String name)
	返回指定的请求头的值为一个 int 值。
30	int getServerPort()
	返回接收到这个请求的端口号。



























